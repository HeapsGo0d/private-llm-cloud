# Nginx Configuration for Private LLM Cloud
# Maximum security and privacy focused

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Hide server information
    server_tokens off;
    more_clear_headers 'Server';
    more_clear_headers 'X-Powered-By';

    # Privacy settings
    access_log off;  # Disable access logs for privacy
    error_log /var/log/nginx/error.log crit;  # Only critical errors

    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=webui:10m rate=30r/s;

    # IP allowlist (configure based on ALLOWED_IPS environment variable)
    # include /etc/nginx/conf.d/allowlist.conf;

    # Upstream servers
    upstream ollama {
        server ollama:11434;
        keepalive 32;
    }

    upstream webui {
        server webui:8080;
        keepalive 32;
    }

    # Main server block
    server {
        listen 80;
        listen [::]:80;
        server_name _;

        # Security settings for this server
        client_body_timeout 10s;
        client_header_timeout 10s;
        client_body_buffer_size 128k;
        client_header_buffer_size 1k;
        large_client_header_buffers 4 4k;

        # Block common attack vectors
        location ~* (\.(php|asp|aspx|jsp|cgi|pl|py)$|/wp-) {
            return 444;
        }

        # Block access to hidden files
        location ~ /\. {
            deny all;
            return 444;
        }

        # Ollama API proxy
        location /api/ {
            limit_req zone=api burst=20 nodelay;

            # Security headers for API
            add_header Access-Control-Allow-Origin "http://localhost:3000" always;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;

            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                return 204;
            }

            # Proxy settings
            proxy_pass http://ollama;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;

            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }

        # Web UI proxy
        location / {
            limit_req zone=webui burst=50 nodelay;

            # Proxy settings
            proxy_pass http://webui;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Privacy dashboard
        location /privacy-dashboard.html {
            limit_req zone=webui burst=10 nodelay;
            root /app/web;
            try_files $uri $uri/ =404;
        }

        # Model loader interface
        location /model-loader.html {
            limit_req zone=webui burst=10 nodelay;
            root /app/web;
            try_files $uri $uri/ =404;
        }

        # Static assets
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            root /app/web;
            expires 1d;
            add_header Cache-Control "public, immutable";
        }

        # Block access to sensitive files
        location ~* \.(conf|log|key|pem|p12|db|sqlite|env)$ {
            deny all;
            return 444;
        }

        # Error pages
        error_page 400 401 403 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location = /404.html {
            root /app/web;
            internal;
        }

        location = /50x.html {
            root /app/web;
            internal;
        }
    }

    # HTTPS server (for production with SSL certificates)
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name _;

        # SSL Configuration (update paths for your certificates)
        # ssl_certificate /etc/nginx/certs/cert.pem;
        # ssl_certificate_key /etc/nginx/certs/key.pem;

        # Modern SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;

        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # Same configuration as HTTP server for locations
        # (Include all location blocks from above)

        return 301 http://$server_name$request_uri;  # Redirect to HTTP for now
    }
}

# Stream block for TCP/UDP proxying (if needed)
stream {
    # Future: Add stream proxying configuration if needed
}